name: vulnerabilities scan workflow

on:
  push:
    branches:
#[0-9] matches any digit ; + allows for one or more of those digits
      - 'release/v[0-9]+.[0-9]+'
      
jobs:
  scan_repo:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source
        uses: actions/checkout@v4
      - name: Print branch
        run: echo "Now scanning branch ${{ github.ref_name }}"
      - name: Scan repo with Trivy
        id: trivy_scan
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'fs'
          ignore-unfixed: true
          format: 'table'
          output: 'trivy-report.txt'
          severity: 'HIGH,CRITICAL'
#      - name: Slack actions vulnerabilities found
#        if: steps.trivy_scan.outputs.vulnerabilities != '[]'
#        uses: slackapi/slack-github-action@v1.26.0
#        with:
#          payload: |
#            {
#            "text": "Ref: ${{ github.ref_name }}\nEvent: ${{ github.event_name }}\nActions URL: ${{ github.event.pull_request.html_url }}\nCommit: ${{ github.event.head_commit.url }}\nScan failed - ${{ github.actor }}\nFailed trivy scan, see uploaded report}"
#            }
#        env:
#            SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
#            SLACK_WEBHOOK_TYPE: INCOMING_WEBHOOK
      - name: Read Trivy report content
        run: cat trivy-report.txt
      - name: Upload report
        if: steps.trivy_scan.outputs.vulnerabilities != '[]'
        uses: MeilCli/slack-upload-file@v4
        with:
          slack_token: ${{ secrets.SLACK_TOKEN }}
          channel_id: ${{ secrets.SLACK_CHANNEL_ID }}
          content: ${{ trivy-report.txt }}
          file_type: 'text'
          file_name: 'trivy-report.txt'
          title: 'title of file'
          initial_comment: 'post by slack-upload-file'
  build_push_docker:
    needs: scan_repo
    runs-on: ubuntu-latest
    if: success()
    steps:
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Docker Login
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/my-app:${{ github.sha	 }}
  sign_and_notify:
    needs: build_push_docker
    runs-on: ubuntu-latest
    if: success()
    steps:
      - name: Checkout source
        uses: actions/checkout@v4
      - name: Install Cosign
        uses: sigstore/cosign-installer@v3.5.0
      - name: Check installed
        run: cosign version
      - name: Write signing key to disk
        run: 'echo "$KEY" > cosign.key'
        shell: bash
        env:
            KEY: ${{ secrets.COSIGN_PRIVATE_KEY }}
      - name: Check key
        run: echo cosign.key
      - name: Sign Docker Image
        env:
            COSIGN_PASSWORD: ${{ secrets.COSIGN_PASSWORD }}
        run: cosign sign --key cosign.key ${{ secrets.DOCKER_USERNAME }}/my-app/${{ github.sha }}
      - name: Slack actions vulnerabilities not found
        uses: slackapi/slack-github-action@v1.26.0
        with:
          status: success
          text: |
            Image built and signed		
            Name: wong yi lun
            Matriculation Number: a0158012r
            Email: e0036525@u.nus.edu
            Git: ${{ github.repository }}
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
          SLACK_WEBHOOK_TYPE: INCOMING_WEBHOOK
